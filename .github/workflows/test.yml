name: Run Keystone Backend Tests

on:
  pull_request

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: db
          POSTGRES_PASSWORD: db
          POSTGRES_DB: the_log_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      COOKIE_SECRET: test-secret
      DATABASE_TYPE: postgresql
      DATABASE_URL: postgres://db:db@localhost:5432/the_log_test
      TESTING: true

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        working-directory: .

      - name: Wait for Postgres
        run: |
          for i in {1..20}; do
            pg_isready -h localhost -p 5432 && break
            sleep 1
          done
          pg_isready -h localhost -p 5432
          if [ $? -ne 0 ]; then
            echo "Failed waiting for PostgreSQL" && exit 1
          fi

      - name: Setup PostgreSQL for tests
        run: |
          echo "Creating root user for PostgreSQL..."
          PGPASSWORD=db psql -h localhost -U db -d the_log_test -c "CREATE USER root WITH PASSWORD 'root' SUPERUSER;"
          echo "PostgreSQL root user created successfully"

      - name: Debug Environment Variables
        run: |
          echo "DATABASE_URL: ${DATABASE_URL:0:10}... (${#DATABASE_URL} chars)"
          echo "TESTING: ${TESTING:-not set}"
          echo "COOKIE_SECRET: ${COOKIE_SECRET:+set but masked}"
          echo "NODE_ENV: ${NODE_ENV:-not set}"
          echo "PostgreSQL Version:"
          psql --version || echo "psql not installed"
          echo "Database Connectivity Test:"
          if [ -n "$DATABASE_URL" ]; then
            pg_isready -d "${DATABASE_URL}" || echo "Database connection failed"
          else
            echo "No DATABASE_URL provided"
          fi

      - name: Run tests
        run: npm run test:ci -- --require=./tests/db-debug.ts
        working-directory: .
